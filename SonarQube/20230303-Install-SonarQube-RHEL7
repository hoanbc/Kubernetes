sudo yum install vim wget curl unzip -y

vim /etc/sysctl.conf
vm.max_map_count=524288
fs.file-max=131072

sudo sysctl --system

vim /etc/security/limits.conf
sonarqube   -   nofile   131072
sonarqube   -   nproc    8192


sudo useradd -M -r sonarqube
chage -M 99999 sonarqube

###JAVA Offline
wget https://download.oracle.com/java/17/archive/jdk-17.0.6_linux-x64_bin.rpm

###POSTGRESQL Offline
https://download.postgresql.org/pub/repos/yum/14/redhat/rhel-7-x86_64/postgresql14-server-14.7-1PGDG.rhel7.x86_64.rpm

###POSTGRESQL Online
sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
sudo yum install -y postgresql14-server

sudo /usr/pgsql-14/bin/postgresql-14-setup initdb
sudo systemctl enable postgresql-14
sudo systemctl start postgresql-14

vim /var/lib/pgsql/14/data/pg_hba.conf
 “peer” to “trust” and “idnet” to “md5“.

vim /var/lib/pgsql/14/data/postgresql.conf
listen_addresses = '*'

sudo systemctl restart postgresql-14

sudo su - postgres
psql 
postgres=# alter user postgres with password 'StrongPassword';
ALTER ROLE
postgres=# exit
-bash-4.2$ createdb sonarqube --locale=en_US.UTF-8 --encoding=UTF8 -U postgres symplcms
-bash-4.2$ psql
postgres=# CREATE USER sonarqube WITH PASSWORD 'StrongPassword';
postgres=# GRANT ALL PRIVILEGES ON DATABASE sonarqube to sonarqube;
postgres=#  \q

wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.0.65466.zip
unzip sonarqube-9.9.0.65466.zip
sudo mv sonarqube-*/  /opt/sonarqube
rm -rf sonarqube-9.9.0.65466.zip

sudo vim /opt/sonarqube/conf/sonar.properties
##Database details
sonar.jdbc.username=sonarqube
sonar.jdbc.password=StrongPassword
sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube

##How you will access SonarQube Web UI
sonar.web.host=0.0.0.0
sonar.web.port=9000

##Java options
sonar.web.javaOpts=-server -Xms512m -Xmx512m -XX:+HeapDumpOnOutOfMemoryError
sonar.search.javaOpts=-Xmx512m -Xms512m -XX:MaxDirectMemorySize=256m -XX:+HeapDumpOnOutOfMemoryError

##Also add the following Elasticsearch storage paths
sonar.path.data=/var/sonarqube/data
sonar.path.temp=/var/sonarqube/temp

sudo chown -R sonarqube:sonarqube /opt/sonarqube
sudo mkdir -p /var/sonarqube
sudo chown -R sonarqube:sonarqube /var/sonarqube

sudo vim /etc/systemd/system/sonarqube.service
[Unit]
Description=SonarQube service
After=syslog.target network.target

[Service]
Type=forking
ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
LimitNOFILE=131072
LimitNPROC=8192
User=sonarqube
Group=sonarqube
Restart=on-failure

[Install]
WantedBy=multi-user.target

sudo systemctl daemon-reload
sudo systemctl enable --now sonarqube.service

###Default Account
admin / admin


###NGINX
/etc/nginx/conf.d/sonar.conf 
server {
    
        listen                      80 default_server;
        server_name                 sonar.example.local;
        return 301                  https://$server_name$request_uri;

}

server {

        listen                      443 ssl http2 default_server;
        server_name                 sonar.example.local;

        client_max_body_size        32M;

        ssl_certificate             /etc/nginx/ssl/tls.crt;
        ssl_certificate_key         /etc/nginx/ssl/tls.key;
        
        # openssl dhparam -out /etc/nginx/ssl/dhparams.pem 2048
        ssl_dhparam                 /etc/nginx/ssl/dhparams.pem;

        ssl_prefer_server_ciphers   on;
        ssl_session_timeout         10m;
        ssl_session_cache           builtin:1000  shared:SSL:10m;
        ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers                 EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        
        access_log                  off;
        error_log                   /var/log/nginx/sonar.error;
            
        location / {

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_set_header        X-Forwarded-Ssl on;
            proxy_read_timeout      300;

            # Redirect to Sonar
            proxy_pass              http://127.0.0.1:9000;
            
            # Fix the “It appears that your reverse proxy set up is broken" error.
            proxy_redirect          http://127.0.0.1:9000 $scheme://$host;

        }

}

###HTTPD
[root@srv-sonarqube ~]# cat /etc/httpd/conf.d/sonarqube.conf
ProxyRequests Off
ProxyPreserveHost On
<VirtualHost *:443>
  ServerName sonarqube.testvn.click
  SSLEngine On
  SSLProxyEngine On
  SSLCertificateFile    /etc/httpd/ssl/public.crt
  SSLCertificateKeyFile /etc/httpd/ssl/private.key
  ProxyPass / http://localhost:9000/
  ProxyPassReverse / https://sonarqube.testvn.click
  RequestHeader set X-Forwarded-Proto "https"
  #ErrorLog logs/somecompany/sonar/error.log
  #CustomLog logs/somecompany/sonar/access.log common
</VirtualHost>


###Change Server base URL
https://sonarqube.testvn.click/ -> Administrator -> General -> Server base URL: https://sonarqube.testvn.click

