###Install repo helm
helm repo add external-dns https://kubernetes-sigs.github.io/external-dns/
helm show values external-dns/external-dns > value.yaml

###Create namespaces
kubectl create ns hbc-external-dns

###Edit config
vim value.yaml
image:
  repository: k8s.gcr.io/external-dns/external-dns
  tag: ""
  pullPolicy: IfNotPresent
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
commonLabels: {}
serviceAccount:
  create: true
  annotations: {}
  name: ""
rbac:
  create: true
  additionalPermissions: []
deploymentAnnotations: {}
podLabels: {}
podAnnotations: {}
shareProcessNamespace: false
podSecurityContext:
  fsGroup: 65534
securityContext:
  runAsNonRoot: true
  runAsUser: 65534
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]
dnsPolicy:
priorityClassName: ""
terminationGracePeriodSeconds:
serviceMonitor:
  enabled: false
  additionalLabels: {}
  interval: 1m
  scrapeTimeout: 10s
env:
- name: CF_API_TOKEN
  value: Xx7n1VKd-h7KQUrf3tXXXX8ew6qaidJdl0dTh ###Change to your api token
livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 2
  successThreshold: 1
readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
service:
  port: 7979
  annotations: {}
extraVolumes: []
extraVolumeMounts: []
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []
logLevel: info
logFormat: text
interval: 10m
triggerLoopOnEvent: false
sources:
  - ingress
policy: sync
registry: txt
txtOwnerId: "hbc-corp"
txtPrefix: ""
txtSuffix: ""
domainFilters:
  - testvn.click
provider: cloudflare
extraArgs: []
deploymentStrategy:
  type: Recreate

###Deploy helm
helm --install external-dns external-dns/external-dns -f values.yaml -n hbc-external-dns


###Deploy ingress
vim ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: testvn.click
    external-dns.alpha.kubernetes.io/ttl: "120"
    kubernetes.io/ingress.class: nginx
  name: nginx-ingress
  namespace: nginx-test
spec:
  rules:
  - host: nginx.testvn.click
    http:
      paths:
      - backend:
          service:
            name: nginx
            port:
              number: 80
        path: /
        pathType: Prefix


kubectl apply -f ingress.yaml
