global:
  enabled: true
  logLevel: "info"
  domain: consul
  image: "hashicorp/consul:1.14.2"
  imageK8S: hashicorp/consul-k8s-control-plane:1.0.2
  datacenter: k8s-on-premise
  metrics:
    enabled: false
    enableAgentMetrics: false
    agentMetricsRetentionTime: 1m
    enableGatewayMetrics: true
  imageConsulDataplane: "hashicorp/consul-dataplane:1.0.0"

server:
  enabled: true
  replicas: 3
  bootstrapExpect: 3
  storage: 10Gi
  storageClass: nfs-external-storage
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "100Mi"
      cpu: "100m"
  updatePartition: 0
  disruptionBudget:
    enabled: true
    maxUnavailable: 1
  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: {{ template "consul.name" . }}
              release: "{{ .Release.Name }}"
              component: server
          topologyKey: kubernetes.io/hostname

client:
  enabled: true
  grpc: true
  nodeMeta:
    pod-name: ${HOSTNAME}
    host-ip: ${HOST_IP}
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "100Mi"
      cpu: "100m"
  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: {{ template "consul.name" . }}
              release: "{{ .Release.Name }}"
              component: client
          topologyKey: kubernetes.io/hostname

ui:
  enabled: "-"
  service:
    enabled: true
    port:
      http: 80
      https: 443
  ingress:
    enabled: false
    ingressClassName: ""
    pathType: Prefix
    hosts: [ ]
    tls: [ ]
    annotations: null
  metrics:
    enabled: "-"
    provider: "prometheus"
    baseURL: http://prometheus-server

connectInject:
  enabled: true
  replicas: 1
  transparentProxy:
    defaultEnabled: true
    defaultOverwriteProbes: true
  disruptionBudget:
    enabled: true
    maxUnavailable: 1 
    minAvailable: null
  cni:
    enabled: false
    logLevel: null
    namespace: null
    cniBinDir: "/opt/cni/bin"
    cniNetDir: "/etc/cni/net.d"
    multus: false
    resources:
      requests:
        memory: "75Mi"
        cpu: "75m"
      limits:
        memory: "100Mi"
        cpu: "100m"
  metrics:
    defaultEnabled: "-"
    defaultEnableMerging: false
    defaultMergedMetricsPort: 20100
    defaultPrometheusScrapePort: 20200
    defaultPrometheusScrapePath: "/metrics"
  logLevel: ""
  serviceAccount:
    annotations: null
  resources:
    requests:
      memory: "50Mi"
      cpu: "50m"
    limits:
      memory: "50Mi"
      cpu: "50m"
  failurePolicy: "Fail"
  namespaceSelector: |
    matchExpressions:
      - key: "kubernetes.io/metadata.name"
        operator: "NotIn"
        values: ["kube-system","local-path-storage"]
  k8sAllowNamespaces: [ "*" ]
  k8sDenyNamespaces: [ ]
  consulNamespaces:
    consulDestinationNamespace: "default"
    mirroringK8S: true
    mirroringK8SPrefix: ""
  nodeSelector: null
  affinity: null
  tolerations: null
  aclBindingRuleSelector: "serviceaccount.name!=default"
  overrideAuthMethodName: ""
  aclInjectToken:
    secretName: null
    secretKey: null
  sidecarProxy:
    concurrency: 2
    resources:
      requests:
        memory: null
        cpu: null
      limits:
        memory: null
        cpu: null
  initContainer:
    resources:
      requests:
        memory: "25Mi"
        cpu: "50m"
      limits:
        memory: "150Mi"
        cpu: "50m"

prometheus:
  enabled: false
